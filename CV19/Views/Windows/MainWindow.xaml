<Window x:Class="CV19.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
		  xmlns:fa="http://schemas.fontawesome.com/icons/"
		  xmlns:cmd="clr-namespace:CV19.Infrastructure.Commands"
		  xmlns:vm="clr-namespace:CV19.ViewModels"
		  xmlns:decanat="clr-namespace:CV19.Models.Decanat"
        mc:Ignorable="d"
		  xmlns:oxy="clr-namespace:OxyPlot.Wpf;assembly=OxyPlot.Wpf"
		  Title="{Binding Title}"
		  Height="600" Width="1100">

	<Window.InputBindings>
		<KeyBinding Modifiers="Ctrl" Key="Q" Command="{Binding CloseApplicationCommand}" />
	</Window.InputBindings>
	<Window.DataContext>
		<vm:MainWindowViewModel />
	</Window.DataContext>
	<Window.Resources>
		<cmd:CloseApplicationCommand x:Key="CloseApplicationCommand" />
	</Window.Resources>

	<DockPanel>
		<Menu DockPanel.Dock="Top">
			<MenuItem Header="Файл">
				<MenuItem Header="Выход" Command="{Binding CloseApplicationCommand}" />
				<!--<MenuItem Header="Выход" Command="{StaticResource CloseApplicationCommand}" />-->
				<!--<MenuItem Header="Выход">
					<MenuItem.Command>
						<cmd:CloseApplicationCommand />
					</MenuItem.Command>
				</MenuItem>-->
			</MenuItem>
			<MenuItem Header="Помощь">
				<MenuItem Header="О программе" />
			</MenuItem>
			<MenuItem Command="{Binding ChangeTabIndexCommand}" CommandParameter="-1">
				<MenuItem.Header>
					<fa:ImageAwesome Height="12" Icon="Solid_ChevronLeft" />
				</MenuItem.Header>
			</MenuItem>
			<MenuItem Command="{Binding ChangeTabIndexCommand}" CommandParameter="1">
				<MenuItem.Header>
					<fa:ImageAwesome Height="12" Icon="Solid_ChevronRight" />
				</MenuItem.Header>
			</MenuItem>
		</Menu>

		<StatusBar DockPanel.Dock="Bottom">
			<StatusBarItem MinWidth="150" MaxWidth="350">
				<StackPanel Orientation="Horizontal">
					<TextBlock Text="{Binding Status}" Margin="0,0,5,0"/>
					<TextBlock Text="{Binding ElementName=tbCtrl, Path=SelectedIndex}" />
				</StackPanel>

			</StatusBarItem>
			<StatusBarItem>
				<ProgressBar Width="120" Height="14" Value="30" />
			</StatusBarItem>
		</StatusBar>

		<TabControl x:Name="tbCtrl" SelectedIndex="{Binding SelectedTabIndex}">

			<TabItem Header="Студенты">
				<Grid>
					<Grid.ColumnDefinitions>
						<ColumnDefinition Width="Auto" />
						<ColumnDefinition />
					</Grid.ColumnDefinitions>

					<GroupBox Grid.Column="0" Header="Группы">
						<DockPanel>
							<DockPanel.Resources>
								<CollectionViewSource x:Key="GroupsCollection" Source="{Binding Groups}" />
							</DockPanel.Resources>
							<DockPanel Margin="0,5" DockPanel.Dock="Top">
								<!--<TextBlock Text="Фильтр:" />-->
								<fa:ImageAwesome Margin="5,0" DockPanel.Dock="Right" Height="14" Icon="Solid_Filter" />
								<TextBox />
							</DockPanel>
							
							<UniformGrid Margin="0,3,0,0" DockPanel.Dock="Bottom" Rows="1">
								<Button Style="{StaticResource CheckButtonStyle}" Margin="0,0,3,0" Content="Добавить" Command="{Binding CreateGroupCommand}" />
								<Button Style="{StaticResource RemoveButtonStyle}" Content="Удалить" Command="{Binding DeleteGroupCommand}" CommandParameter="{Binding SelectedGroup}" />
							</UniformGrid>
							<ListView x:Name="lstGroups" ItemsSource="{Binding Source={StaticResource GroupsCollection}}" SelectedIndex="0"
									 SelectedItem="{Binding SelectedGroup}"
										 VirtualizingPanel.IsContainerVirtualizable="True"
										 VirtualizingPanel.IsVirtualizing="True"
										 VirtualizingPanel.VirtualizationMode="Recycling">
								<ListView.ItemsPanel>
									<ItemsPanelTemplate>
										<VirtualizingStackPanel />
									</ItemsPanelTemplate>
								</ListView.ItemsPanel>
							<ListView.ItemTemplate>
								<DataTemplate DataType="decanat:Group">
									<StackPanel Orientation="Horizontal">
										<TextBlock Margin="0,0,5,0" Text="{Binding Name}" Name ="TextView" />
										<TextBlock Text="{Binding Students.Count, StringFormat=(Количество студентов: {0})}" />
									</StackPanel>
										<DataTemplate.Triggers>
											<DataTrigger Binding="{Binding Students.Count}" Value="0">
												<Setter TargetName="TextView" Property="Foreground" Value="Red"></Setter>
											</DataTrigger>
										</DataTemplate.Triggers>
								</DataTemplate>
							</ListView.ItemTemplate>
						</ListView>
						</DockPanel>

					</GroupBox>

					<GroupBox Grid.Column="1" Header="{Binding SelectedGroup.Name, FallbackValue='Студенты', TargetNullValue='Группа не выбрана'}">
						<DockPanel>
							<DockPanel Margin="0,5" DockPanel.Dock="Top">
								<!--<TextBlock Text="Фильтр:" />-->
								<fa:ImageAwesome Margin="5,0" DockPanel.Dock="Right" Height="14" Icon="Solid_Filter" />
								<TextBox />
							</DockPanel>
							
							<DataGrid ItemsSource="{Binding SelectedGroup.Students}" AutoGenerateColumns="False"
									 GridLinesVisibility="Vertical" VerticalGridLinesBrush="DarkKhaki" AlternatingRowBackground="Bisque">
								<DataGrid.Columns>
									<DataGridTextColumn Header="Фамилия" Binding="{Binding Surname}" Width="Auto" />
									<DataGridTextColumn Header="Имя" Binding="{Binding Name}"  IsReadOnly="True" />
									<DataGridTextColumn Header="Отчество" Binding="{Binding Patronimic}"  IsReadOnly="True" />
									<!--<DataGridTextColumn Header="Дата рождения" Binding="{Binding Birthday, StringFormat='dd.MM.yyyy'}" />-->

									<DataGridTemplateColumn Header="Дата рождения">
										<DataGridTemplateColumn.CellTemplate>
											<DataTemplate DataType="decanat:Student">
												<TextBlock Text="{Binding Birthday, StringFormat='dd.MM.yyyy'}" />
											</DataTemplate>
										</DataGridTemplateColumn.CellTemplate>
										<DataGridTemplateColumn.CellEditingTemplate>
											<DataTemplate DataType="decanat:Student">
												<DatePicker SelectedDate="{Binding Birthday}" />
											</DataTemplate>
										</DataGridTemplateColumn.CellEditingTemplate>
									</DataGridTemplateColumn>

									<DataGridTextColumn Header="Рейтинг" Binding="{Binding Rating}"  IsReadOnly="True" />
									<DataGridTextColumn Header="Группа" Binding="{Binding DataContext.SelectedGroup.Name, RelativeSource={RelativeSource AncestorType=DataGrid}}"  IsReadOnly="True" />
									<DataGridTextColumn Header="Заметка" Binding="{Binding Description}" Width="*" />
								</DataGrid.Columns>
							</DataGrid>
						</DockPanel>
					</GroupBox>
				</Grid>
			</TabItem>

			<TabItem Header="Разнородные данные" Visibility="Collapsed">
				<Grid>
					<Grid.ColumnDefinitions>
						<ColumnDefinition Width="Auto"/>
						<ColumnDefinition />
					</Grid.ColumnDefinitions>

					<GroupBox Header="Элементы">
						<ListBox ItemsSource="{Binding CompositeCollection}"  SelectedItem="{Binding SelectedCompositeValue}">
							<ListBox.Resources>
								<ResourceDictionary>
									<ResourceDictionary.MergedDictionaries>
										<ResourceDictionary Source="../../Resources/DataTemplates/CompositeListItemsDataTemplates.xaml" />
									</ResourceDictionary.MergedDictionaries>
								</ResourceDictionary>
							</ListBox.Resources>
						</ListBox>
					</GroupBox>

					<GroupBox Header="Выбранный элемент" Grid.Column="1">
						<Grid>
							<Grid.Resources>
								<ResourceDictionary>
									<ResourceDictionary.MergedDictionaries>
										<ResourceDictionary Source="../../Resources/DataTemplates/CompositeItemsControlDataTemplates.xaml" />
									</ResourceDictionary.MergedDictionaries>
								</ResourceDictionary>
							</Grid.Resources>

							<ContentControl Content="{Binding SelectedCompositeValue}" />
						</Grid>
					</GroupBox>
				</Grid>
			</TabItem>

			<TabItem Header="График" Visibility="Collapsed">
				<oxy:PlotView Model="{Binding TestPlotModel}" />
			</TabItem>
			
		</TabControl>
	</DockPanel>

</Window>
